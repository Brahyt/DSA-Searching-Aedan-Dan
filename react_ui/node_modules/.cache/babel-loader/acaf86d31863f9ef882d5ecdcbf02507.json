{"ast":null,"code":"function binarySearch(array, value, start, end) {\n  start = start === undefined ? 0 : start;\n  end = end === undefined ? array.length : end;\n\n  if (start > end) {\n    return -1;\n  }\n\n  const index = Math.floor((start + end) / 2);\n  const item = array[index];\n  console.log(start, end);\n\n  if (item == value) {\n    alert(item);\n    return index;\n  } else if (item < value) {\n    return binarySearch(array, value, index + 1, end);\n  } else if (item > value) {\n    return binarySearch(array, value, start, index - 1);\n  } else {\n    alert(\"Cannot find number\");\n  }\n}\n\nclass BST {\n  constructor(key = null, value = null, parent = null) {\n    this.key = key;\n    this.value = value;\n    this.parent = parent;\n    this.left = null;\n    this.right = null;\n  }\n\n}\n\nmodule.exports = {\n  binarySearch\n};","map":{"version":3,"sources":["/home/brahyt/code/thinkful/week-14/DSA-Searching/react_ui/src/helpers/search.js"],"names":["binarySearch","array","value","start","end","undefined","length","index","Math","floor","item","console","log","alert","BST","constructor","key","parent","left","right","module","exports"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,GAA3C,EAAgD;AAC9CD,EAAAA,KAAK,GAAGA,KAAK,KAAKE,SAAV,GAAsB,CAAtB,GAA0BF,KAAlC;AACAC,EAAAA,GAAG,GAAGA,GAAG,KAAKC,SAAR,GAAoBJ,KAAK,CAACK,MAA1B,GAAmCF,GAAzC;;AACA,MAAID,KAAK,GAAGC,GAAZ,EAAiB;AACf,WAAO,CAAC,CAAR;AACD;;AACD,QAAMG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACN,KAAK,GAAGC,GAAT,IAAgB,CAA3B,CAAd;AACA,QAAMM,IAAI,GAAGT,KAAK,CAACM,KAAD,CAAlB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EAAmBC,GAAnB;;AACA,MAAIM,IAAI,IAAIR,KAAZ,EAAkB;AAChBW,IAAAA,KAAK,CAACH,IAAD,CAAL;AACA,WAAOH,KAAP;AACD,GAHD,MAIK,IAAIG,IAAI,GAAGR,KAAX,EAAkB;AACrB,WAAOF,YAAY,CAACC,KAAD,EAAQC,KAAR,EAAeK,KAAK,GAAG,CAAvB,EAA0BH,GAA1B,CAAnB;AACD,GAFI,MAGA,IAAIM,IAAI,GAAGR,KAAX,EAAkB;AACrB,WAAOF,YAAY,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,EAAsBI,KAAK,GAAG,CAA9B,CAAnB;AACD,GAFI,MAGA;AACHM,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACD;AACF;;AAED,MAAMC,GAAN,CAAU;AACRC,EAAAA,WAAW,CAACC,GAAG,GAAG,IAAP,EAAad,KAAK,GAAG,IAArB,EAA2Be,MAAM,GAAG,IAApC,EAA0C;AACnD,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKd,KAAL,GAAaA,KAAb;AACA,SAAKe,MAAL,GAAcA,MAAd;AACA,SAAKC,IAAL,GAAY,IAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACD;;AAPO;;AAUVC,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA;AADe,CAAjB","sourcesContent":["function binarySearch(array, value, start, end) {\n  start = start === undefined ? 0 : start;\n  end = end === undefined ? array.length : end;\n  if (start > end) {\n    return -1;\n  }\n  const index = Math.floor((start + end) / 2);\n  const item = array[index];\n  console.log(start, end)\n  if (item == value){\n    alert(item)\n    return index;\n  }\n  else if (item < value) {\n    return binarySearch(array, value, index + 1, end);\n  }\n  else if (item > value) {\n    return binarySearch(array, value, start, index - 1);\n  }\n  else {\n    alert(\"Cannot find number\")\n  }\n}\n\nclass BST {\n  constructor(key = null, value = null, parent = null) {\n    this.key = key;\n    this.value = value;\n    this.parent = parent;\n    this.left = null;\n    this.right = null;\n  }\n}\n\nmodule.exports = {\n  binarySearch,\n}\n"]},"metadata":{},"sourceType":"module"}